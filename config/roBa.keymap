#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>
#define ZMK_MOUSE_POINTING_SCRL_VAL 100

&mt {
    flavor = "balanced";
    quick-tap-ms = <0>;
};

/ {
    combos {
        compatible = "zmk,combos";

        tab {
            bindings = <&kp TAB>;
            key-positions = <11 12>;
        };

        shift_tab {
            bindings = <&kp LS(TAB)>;
            key-positions = <12 13>;
        };
    };

    macros {
        to_layer_0: to_layer_0 {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings = <&to 0 &macro_param_1to1 &kp MACRO_PLACEHOLDER>;
            label = "TO_LAYER_0";
        };
    };

    behaviors {
        lt_to_layer_0: lt_to_layer_0 {
            compatible = "zmk,behavior-hold-tap";
            label = "LAYER_TAP_TO_0";
            bindings = <&mo>, <&to_layer_0>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;

            scroll_up_down: behavior_sensor_rotate_mouse_wheel_up_down {
                        compatible = "zmk,behavior-sensor-rotate";
                        #sensor-binding-cells = <0>;
                        bindings = <&msc SCRL_DOWN>, <&msc SCRL_UP>;
                        tap-ms = <20>;
            };
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&mt LEFT_CONTROL Q     &kp W         &kp E         &kp R                      &kp T                                                       &kp Y                   &kp U  &kp I      &kp O    &kp P
&kp A                  &kp S         &kp D         &kp F                      &kp G        &kp LS(LG(S))                   &kp MINUS      &kp H                   &kp J  &kp K      &lt 5 L  &lt 4 ENTER
&kp LEFT_CONTROL       &kp Z         &kp X         &kp C                      &kp V        &kp B                           &kp SEMICOLON  &kp N                   &kp M  &kp COMMA  &kp DOT  &kp SLASH
&mt LEFT_SHIFT ESCAPE  &kp LEFT_WIN  &kp LEFT_ALT  &lt_to_layer_0 6 LEFT_ALT  &lt 2 SPACE  &lt_to_layer_0 3 LC(SPACE)      &kp BACKSPACE  &lt_to_layer_0 3 ENTER                             &lt 1 DELETE
            >;

            sensor-bindings = <&scroll_up_down>;
        };

        FUNCTION {
            bindings = <
&kp F1  &kp F2  &kp F3  &kp F4  &kp F5                      &kp F6   &kp F7   &kp F8  &kp F9  &kp F10
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &kp F11  &kp F12  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans   &trans   &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans                            &trans
            >;

            sensor-bindings = <&inc_dec_kp C_VOLUME_UP C_VOLUME_DOWN>;
        };

        NUM {
            bindings = <
&kp NUMBER_1         &kp NUMBER_2  &kp NUMBER_3  &kp NUMBER_4  &kp N5                                                           &kp NUMBER_6      &kp N7             &kp N8          &kp N9           &kp N0
&kp EXCLAMATION      &kp AT_SIGN   &kp HASH      &kp DOLLAR    &kp PERCENT  &kp LC(LA(KP_NUMBER_0))      &kp SINGLE_QUOTE       &kp CARET         &kp AMPERSAND      &kp ASTERISK    &kp MINUS        &kp EQUAL
&mt LEFT_SHIFT PLUS  &kp MINUS     &kp ASTERISK  &kp SLASH     &kp PERIOD   &kp LEFT_PARENTHESIS         &kp RIGHT_PARENTHESIS  &kp LEFT_BRACKET  &kp RIGHT_BRACKET  &kp LEFT_BRACE  &kp RIGHT_BRACE  &kp TILDE
&kp EQUAL            &trans        &trans        &trans        &trans       &trans                       &trans                 &trans                                                                &kp BACKSLASH
            >;

            sensor-bindings = <&inc_dec_kp C_BRIGHTNESS_INC C_BRIGHTNESS_DEC>;
        };

        ARROW {
            bindings = <
&kp ESCAPE      &kp LC(LS(TAB))         &kp UP_ARROW    &kp LC(TAB)              &trans                       &kp ESCAPE  &kp LS(LC(TAB))   &kp UP_ARROW    &kp LC(TAB)        &trans
&kp HOME        &kp LEFT_ARROW          &kp DOWN_ARROW  &kp RIGHT_ARROW          &kp END  &trans      &trans  &kp HOME    &kp LEFT_ARROW    &kp DOWN_ARROW  &kp RIGHT_ARROW    &kp END
&kp LEFT_SHIFT  &kp LG(LS(LEFT_ARROW))  &trans          &kp LG(LS(RIGHT_ARROW))  &trans   &trans      &trans  &trans      &kp LS(LG(LEFT))  &trans          &kp LS(LG(RIGHT))  &trans
&trans          &trans                  &trans          &trans                   &trans   &trans      &trans  &trans                                                           &trans
            >;

            sensor-bindings = <&inc_dec_kp LC(PAGE_UP) LC(PAGE_DOWN)>;
        };

        MOUSE {
            bindings = <
&trans  &trans  &trans  &trans  &trans                      &trans  &trans    &mkp MB3  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &mkp MB1  &mkp MB2  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans    &trans    &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans                              &trans
            >;

           sensor-bindings = <&scroll_up_down>;
        };

        SCROLL {
            bindings = <
&trans  &trans  &trans          &trans           &trans                      &trans  &trans  &trans  &trans  &trans
&trans  &trans  &msc SCRL_LEFT  &msc SCRL_RIGHT  &trans  &trans      &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans          &trans           &trans  &trans      &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans          &trans           &trans  &trans      &trans  &trans                          &trans
            >;
        };

        layer_6 {
            bindings = <
&trans  &trans        &trans        &trans        &trans                           &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4
&trans  &trans        &trans        &trans        &trans  &trans      &trans       &trans        &trans        &trans        &trans        &trans
&trans  &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &trans  &trans      &bootloader  &trans        &trans        &trans        &trans        &bt BT_CLR
&trans  &trans        &trans        &trans        &trans  &trans      &trans       &trans                                                  &bt BT_CLR_ALL
            >;
        };
    };
};
